version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: docx_converter
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/docx_converter
      - REDIS_URL=redis://redis:6379/0
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - file_storage:/app/storage
    depends_on:
      - postgres
      - redis
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/docx_converter
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - file_storage:/app/storage
    depends_on:
      - postgres
      - redis
    command: ["celery", "-A", "app.worker", "worker", "--loglevel=info", "--concurrency=4"]

  flower:
    build: .
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    command: ["celery", "-A", "app.worker", "flower", "--port=5555"]

volumes:
  postgres_data:
  file_storage: